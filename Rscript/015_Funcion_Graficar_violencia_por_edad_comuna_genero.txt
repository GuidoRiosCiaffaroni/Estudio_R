# ────────────────────────────────────────────────────────────────────────────────
# 014 – Graficar violencia de género (víctima/agresor) usando la BD “wordpress”
# ────────────────────────────────────────────────────────────────────────────────

# 1. Librerías ──────────────────────────────────────────────────────────────────
if (!requireNamespace("janitor",   quietly = TRUE)) install.packages("janitor")
if (!requireNamespace("RMariaDB",  quietly = TRUE)) install.packages("RMariaDB")
if (!requireNamespace("dplyr",     quietly = TRUE)) install.packages("dplyr")
if (!requireNamespace("ggplot2",   quietly = TRUE)) install.packages("ggplot2")

library(DBI)
library(RMariaDB)
library(janitor)
library(dplyr)
library(ggplot2)

# 2. Directorio de salida (igual que en el script 005) ──────────────────────────
dir_out <- "/home/r/Estudio_R/salidas"
if (!dir.exists(dir_out)) dir.create(dir_out, recursive = TRUE)

# 3. Conexión a la base de datos “wordpress” ────────────────────────────────────
con <- dbConnect(
  MariaDB(),
  dbname   = "wordpress",
  host     = "localhost",
  user     = "nuevo_admin",      # ← ajusta si usas otro usuario
  password = "MiClaveSegura",    # ← ajusta tu clave
  timezone = "UTC"
)
on.exit(dbDisconnect(con), add = TRUE)

# 4. Cargamos y limpiamos la tabla principal ────────────────────────────────────
datos_bd <- dbReadTable(con, "wp_db_upload") %>%
  clean_names()        # nombres a snake_case: genero_victima, genero_agresor, etc.

# 5. Función de graficado ───────────────────────────────────────────────────────
###########################################################################


###########################################################################
# Función: Graficar tipo de violencia por edad, comuna y género de la víctima
graficar_violencia_por_edad_comuna_y_genero <- function(, edad_objetivo, nombre_comuna, genero_victima, salida = "violencia_edad_comuna_genero.png") {
  library(ggplot2)
  library(readr)
  library(dplyr)

  # Leer el archivo
 

  # Convertir columnas a formatos adecuados
  datos$Genero.Victima <- as.numeric(as.character(datos$Genero.Victima))
  datos$Edad <- as.numeric(as.character(datos$Edad))
  datos$Nombre_Comuna <- tolower(datos$Nombre_Comuna)
  nombre_comuna <- tolower(nombre_comuna)

  # Filtrar por edad, comuna y género
  datos_filtrados <- datos %>%
    filter(Edad == edad_objetivo,
           Nombre_Comuna == nombre_comuna,
           Genero.Victima == genero_victima)

  # Validar si hay datos
  if (nrow(datos_filtrados) == 0) {
    message(" No hay registros para la comuna '", nombre_comuna, "', edad ", edad_objetivo, " y género ", genero_victima, ".")
    return(NULL)
  }

  # Crear gráfico
  tryCatch({
    png(salida, width = 1000, height = 700)
    print(
      ggplot(datos_filtrados, aes(x = Nombre_Violencia)) +
        geom_bar(fill = "tomato") +
        labs(
          title = paste("Violencia - Comuna:", tools::toTitleCase(nombre_comuna),
                        "| Edad:", edad_objetivo,
                        "| Género:", genero_victima),
          x = "Tipo de Violencia",
          y = "Frecuencia"
        ) +
        theme_minimal() +
        theme(axis.text.x = element_text(angle = 90, hjust = 1))
    )
    dev.off()
    message(paste(" Gráfico guardado en:", salida))
  }, error = function(e) {
    message(" Error al generar el gráfico: ", e$message)
    dev.off()
  })
}
###########################################################################

# Ejemplo de uso: hombre (0), edad 30, comuna "maipu"
genero <- 1
genero_texto <- ifelse(genero == 1, "mujer", "hombre")
comuna <- "maipu"
edad <- 22

graficar_violencia_por_edad_comuna_y_genero(
  archivo_csv = "Data_modificado.csv",
  edad_objetivo = edad,
  nombre_comuna = comuna,
  genero_victima = genero,
  salida = paste0("011_violencia_", comuna, "_", genero_texto, "_", edad, ".png")
)


